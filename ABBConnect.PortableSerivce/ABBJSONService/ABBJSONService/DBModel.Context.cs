//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABBJSONService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ABBConnectEntities : DbContext
    {
        public ABBConnectEntities()
            : base("name=ABBConnectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddCommentToFeed(Nullable<int> feedId, string username, string text)
        {
            var feedIdParameter = feedId.HasValue ?
                new ObjectParameter("feedId", feedId) :
                new ObjectParameter("feedId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCommentToFeed", feedIdParameter, usernameParameter, textParameter);
        }
    
        public virtual int AddFeed(Nullable<int> userId, string text, string filePath, Nullable<int> feedPriorityId, ObjectParameter retFeedId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("filePath", filePath) :
                new ObjectParameter("filePath", typeof(string));
    
            var feedPriorityIdParameter = feedPriorityId.HasValue ?
                new ObjectParameter("feedPriorityId", feedPriorityId) :
                new ObjectParameter("feedPriorityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFeed", userIdParameter, textParameter, filePathParameter, feedPriorityIdParameter, retFeedId);
        }
    
        public virtual int AddSensorValues(Nullable<int> sensorID, Nullable<int> data)
        {
            var sensorIDParameter = sensorID.HasValue ?
                new ObjectParameter("sensorID", sensorID) :
                new ObjectParameter("sensorID", typeof(int));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSensorValues", sensorIDParameter, dataParameter);
        }
    
        public virtual int AddTagToFeed(Nullable<int> feedId, string username)
        {
            var feedIdParameter = feedId.HasValue ?
                new ObjectParameter("feedId", feedId) :
                new ObjectParameter("feedId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTagToFeed", feedIdParameter, usernameParameter);
        }
    
        public virtual int AddUserSavedFilter(Nullable<int> userId, string filterName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string location, Nullable<int> tagUserId1, Nullable<int> tagUserId2, Nullable<int> tagUserId3, Nullable<int> tagUserId4, Nullable<int> tagUserId5)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var filterNameParameter = filterName != null ?
                new ObjectParameter("FilterName", filterName) :
                new ObjectParameter("FilterName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var tagUserId1Parameter = tagUserId1.HasValue ?
                new ObjectParameter("TagUserId1", tagUserId1) :
                new ObjectParameter("TagUserId1", typeof(int));
    
            var tagUserId2Parameter = tagUserId2.HasValue ?
                new ObjectParameter("TagUserId2", tagUserId2) :
                new ObjectParameter("TagUserId2", typeof(int));
    
            var tagUserId3Parameter = tagUserId3.HasValue ?
                new ObjectParameter("TagUserId3", tagUserId3) :
                new ObjectParameter("TagUserId3", typeof(int));
    
            var tagUserId4Parameter = tagUserId4.HasValue ?
                new ObjectParameter("TagUserId4", tagUserId4) :
                new ObjectParameter("TagUserId4", typeof(int));
    
            var tagUserId5Parameter = tagUserId5.HasValue ?
                new ObjectParameter("TagUserId5", tagUserId5) :
                new ObjectParameter("TagUserId5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserSavedFilter", userIdParameter, filterNameParameter, startDateParameter, endDateParameter, locationParameter, tagUserId1Parameter, tagUserId2Parameter, tagUserId3Parameter, tagUserId4Parameter, tagUserId5Parameter);
        }
    
        public virtual ObjectResult<GetAllHumanFeeds_Result> GetAllHumanFeeds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHumanFeeds_Result>("GetAllHumanFeeds");
        }
    
        public virtual ObjectResult<GetAllHumanFeedsByFilter_Result> GetAllHumanFeedsByFilter(string location, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHumanFeedsByFilter_Result>("GetAllHumanFeedsByFilter", locationParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetAllSensorFeeds_Result> GetAllSensorFeeds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSensorFeeds_Result>("GetAllSensorFeeds");
        }
    
        public virtual ObjectResult<GetAllSensorFeedsByFilter_Result> GetAllSensorFeedsByFilter(string location, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSensorFeedsByFilter_Result>("GetAllSensorFeedsByFilter", locationParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetAllSensors_Result> GetAllSensors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSensors_Result>("GetAllSensors");
        }
    
        public virtual ObjectResult<GetFeedComments_Result> GetFeedComments(Nullable<int> feedId)
        {
            var feedIdParameter = feedId.HasValue ?
                new ObjectParameter("feedId", feedId) :
                new ObjectParameter("feedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedComments_Result>("GetFeedComments", feedIdParameter);
        }
    
        public virtual ObjectResult<GetFeedsByFilter_Result> GetFeedsByFilter(string name, string location, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string feedType)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            var feedTypeParameter = feedType != null ?
                new ObjectParameter("FeedType", feedType) :
                new ObjectParameter("FeedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedsByFilter_Result>("GetFeedsByFilter", nameParameter, locationParameter, startTimeParameter, endTimeParameter, feedTypeParameter);
        }
    
        public virtual ObjectResult<GetFeedTags_Result> GetFeedTags(Nullable<int> feedId)
        {
            var feedIdParameter = feedId.HasValue ?
                new ObjectParameter("feedId", feedId) :
                new ObjectParameter("feedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedTags_Result>("GetFeedTags", feedIdParameter);
        }
    
        public virtual ObjectResult<GetHistoricalDataFromSensor_Result> GetHistoricalDataFromSensor(Nullable<int> sensorID, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var sensorIDParameter = sensorID.HasValue ?
                new ObjectParameter("sensorID", sensorID) :
                new ObjectParameter("sensorID", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHistoricalDataFromSensor_Result>("GetHistoricalDataFromSensor", sensorIDParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<GetHumanInformation_Result> GetHumanInformation(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHumanInformation_Result>("GetHumanInformation", userIdParameter);
        }
    
        public virtual ObjectResult<GetHumanInformationByUsername_Result> GetHumanInformationByUsername(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHumanInformationByUsername_Result>("GetHumanInformationByUsername", userNameParameter);
        }
    
        public virtual ObjectResult<GetLatestFeeds_Result> GetLatestFeeds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestFeeds_Result>("GetLatestFeeds");
        }
    
        public virtual ObjectResult<GetLatestFeedsByFilter_Result> GetLatestFeedsByFilter(string location, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestFeedsByFilter_Result>("GetLatestFeedsByFilter", locationParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<string> GetLatestSensorValue(Nullable<int> sensorID)
        {
            var sensorIDParameter = sensorID.HasValue ?
                new ObjectParameter("sensorID", sensorID) :
                new ObjectParameter("sensorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLatestSensorValue", sensorIDParameter);
        }
    
        public virtual ObjectResult<GetLatestXFeeds_Result> GetLatestXFeeds(Nullable<int> x)
        {
            var xParameter = x.HasValue ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestXFeeds_Result>("GetLatestXFeeds", xParameter);
        }
    
        public virtual ObjectResult<GetLatestXFeedsFromId_Result> GetLatestXFeedsFromId(Nullable<int> feedID, Nullable<int> x)
        {
            var feedIDParameter = feedID.HasValue ?
                new ObjectParameter("feedID", feedID) :
                new ObjectParameter("feedID", typeof(int));
    
            var xParameter = x.HasValue ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestXFeedsFromId_Result>("GetLatestXFeedsFromId", feedIDParameter, xParameter);
        }
    
        public virtual ObjectResult<string> GetLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLocations");
        }
    
        public virtual ObjectResult<GetPriorityCategories_Result> GetPriorityCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPriorityCategories_Result>("GetPriorityCategories");
        }
    
        public virtual ObjectResult<GetSensorInformation_Result> GetSensorInformation(Nullable<int> sensorID)
        {
            var sensorIDParameter = sensorID.HasValue ?
                new ObjectParameter("sensorID", sensorID) :
                new ObjectParameter("sensorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSensorInformation_Result>("GetSensorInformation", sensorIDParameter);
        }
    
        public virtual ObjectResult<GetUserFeeds_Result> GetUserFeeds(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserFeeds_Result>("GetUserFeeds", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserFeedsByFilter_Result> GetUserFeedsByFilter(Nullable<int> userId, string location, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserFeedsByFilter_Result>("GetUserFeedsByFilter", userIdParameter, locationParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetUserSavedFilters_Result> GetUserSavedFilters(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSavedFilters_Result>("GetUserSavedFilters", userIdParameter);
        }
    
        public virtual ObjectResult<GetUsersByName_Result> GetUsersByName(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersByName_Result>("GetUsersByName", queryParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string username, string password, ObjectParameter ret)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", usernameParameter, passwordParameter, ret);
        }
    
        public virtual int SetBounderyValue(Nullable<int> sensorID, Nullable<decimal> lBoundery, Nullable<decimal> uBoundery)
        {
            var sensorIDParameter = sensorID.HasValue ?
                new ObjectParameter("sensorID", sensorID) :
                new ObjectParameter("sensorID", typeof(int));
    
            var lBounderyParameter = lBoundery.HasValue ?
                new ObjectParameter("lBoundery", lBoundery) :
                new ObjectParameter("lBoundery", typeof(decimal));
    
            var uBounderyParameter = uBoundery.HasValue ?
                new ObjectParameter("uBoundery", uBoundery) :
                new ObjectParameter("uBoundery", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetBounderyValue", sensorIDParameter, lBounderyParameter, uBounderyParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
